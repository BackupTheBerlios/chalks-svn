/*

*/

using System;
using Gtk;
using Glade;
// Look at 
// http://www.mono-project.com/GtkSharp 
// http://primates.ximian.com/~edasque/projects/Tutorial/glade2.html 
// for some hints

using Chalks.ConcurrentEditionWidget;

namespace Chalks.Gui
{
    
    public class ChalksWindow 
    {
        public this() 
        {

            Application.Init ();

            //def gxml = Glade.XML("../../src/chalks.glade", "chalks_window", null);

            // chalks.glade file included as a resource "-res:chalks.glade"
            def gxml = Glade.XML(null, "chalks.glade", "chalks_window", null);
            
            
            // Connect the custom widget with the existing layout
            def cce_widget = ConcurrentEditionWidget(); // cce == ConcurrentEdition
            def scrolledwindow3 = gxml.GetWidget("scrolledwindow3") :> ScrolledWindow;
            scrolledwindow3.Add(cce_widget);
            scrolledwindow3.ShowAll();

            gxml.Autoconnect (this);
            Application.Run();
        }
        
        
        /* Connect the Signals defined in Glade */
        #region SignalsHandlers
        
        on_chalks_window_delete_event( _ :object, args :DeleteEventArgs) : void 
        {
            Application.Quit ();
            args.RetVal = true;
        }
        
        on_new_menu_item_activate (o :object,  args : EventArgs) : void
        {
            
        }
        
        	   
        on_quit_menu_item_activate(o :object,  args : EventArgs) : void
        {
            Application.Quit();
            // TODO The application quit only at the second click 
            // (need to do something to EventArgs ?)
        }
            
        #endregion
        
    }
    
    
}