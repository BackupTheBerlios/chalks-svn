TODO

Priorities

1  - The quit bug
4  - ZeroConf support
5  - Interface and interactions design validation
6  - Preferences dialog (what we want to make customizable ?)
7  - Undo/Redo implementation
8  - Implement password user interface
9  - Application and wiki documentation
10 - ConcurrentEditableWidget tooltips
11 - SourceView usage
12 - More automated tests for concurrentedition
13 - More automated tests for network layer
14 - MacOs support
15 - Promotional videos


Documentation

* Fill the web layout of the design documentation


Gui

* Check file open, save, save as implementation
* Implement set password dialog* Messages should show colored nicknames
---
* Add Gtk.ToolTipsData tooltips over the main text that shows the author of a paragraph. 


ConcurrentEditableWidget

* Reenable use of SourceView, disabled because of Gtk 1.0/2.0 compilation issues, has to be solved. Disabling is just a workarround (how does Monodev solve this issue ?)
---
* Trigger flush when finishing a word or a phrase, slowdown the automatic flush timer
* How to avoid tags to copied when copy and paste ? (has to manage the clipboard data reception or the TextBuffer.PasteClipboard)


Network

* ZeroConf support
* When loading the document, the download should show a progress bar. How to this in a remoting schema ? How does the design have to be modified ?
   

ConcurrentEditable

* Write more tests


Chalks

* When the window is close, the program does not quit (need double click to quit)

 
Deployment

* Implement distribution build in make.py:
	- Nullsoft installed for windows
	- Unzip and run zip file (gtk+gtksharp dlls included)
	- Tar.gz of compiled .Net program
	- Tar.gz of full sources

	
