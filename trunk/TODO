TODO

Priorities

1  - Test, debug, polish
2  - Wiki documentation
3  - Application documentation
4  - SourceView usage (win32 compilation)
5  - More automated tests for concurrentedition
6  - More automated tests for network layer
7  - Promotional videos
8  - MacOs support


Documentation

* Fill the web layout of the design documentation


Gui

* Open remote file ZeroConf node appearance/deletion does not work (where is the bug ?)
* Colored nicknames does not work in both senses (there is a bug)
* Check local file open and remote file open implementation
* Enable use of the set password dialog into the preferences
* Link the Connection section of the Preferences dialog to an underlying action
* How to change tabs by spaces ?


ConcurrentEditableWidget

* Solve the "delete_text" implementation error
* Reenable use of SourceView, disabled because of Gtk 1.0/2.0 compilation issues, has to be solved. Disabling is just a workarround (how does Monodev solve this issue ?)
---
* Trigger flush when finishing a word or a phrase, slowdown the automatic flush timer
* How to avoid tags to copied when copy and paste ? (has to manage the clipboard data reception or the TextBuffer.PasteClipboard)


Network

* Chalks blocks at start if internet is not available
* Implement callback if connection is lost
* Have to implement the propagation of the "user has quited the session" event
* Have to implement the propagation of the "nickname change" event
* When loading the document, the download should show a progress bar. How to this in a remoting schema ? How does the design have to be modified ?
* Implement ping calculator method   
* Find a way to ensure that mDNSPublish.exe is killed if Chalks.exe closes or crash

ConcurrentEditable

* Solve redo horrible bug
* Write a test for generate_undo
* Write more tests


Chalks

* The application crash when closing it after having tryed to open a remote file ?

 
Deployment

* Implement distribution builds in make.py:
	- Nullsoft installed for windows
	- Unzip and run zip file (gtk+gtksharp dlls included)
	- Tar.gz of compiled .Net program
	- Tar.gz of full sources

	
